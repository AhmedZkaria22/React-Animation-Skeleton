{"ast":null,"code":"import _slicedToArray from\"E:/ITI/React/az-animation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import'../styles/Menus.css';import'../styles/General.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ReactRevelaMenu(_ref){var setAnmyType=_ref.setAnmyType;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),animationTypes=_useState2[0],setAnimationTypes=_useState2[1];var menuLength=['','','','','','','','','','','','','','','','',''];useEffect(function(){setTimeout(function(){setAnimationTypes(['Fade','Flip','Rotate','Zoom','Bounce','Slide','Roll','LightSpeed','Jump','Flash','HeadShake','Jello','Pulse','RubberBand','Shake','Spin','Swing','Tada','Wobble']);},2000);},[]);return/*#__PURE__*/_jsx(_Fragment,{children:animationTypes.length===0?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"skeletonWrapper azDFlexCSevn\",style:{flexWrap:'wrap',boxShadow:'rgba(0, 0, 0, 0.1) 0px 3px 8px',margin:'0.3rem 0rem'},children:menuLength.map(function(item,i){return/*#__PURE__*/_jsx(\"span\",{className:'skeletonWrapper__menu',children:item},i);})})}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:'ReactRevelaMenu',children:animationTypes.map(function(animationType,i){return/*#__PURE__*/_jsx(\"div\",{className:\"ReactRevelaMenu__item \".concat(animationType),onClick:function onClick(){return setAnmyType(\"\".concat(animationType));},children:animationType},i);})})})});}export default ReactRevelaMenu;","map":{"version":3,"sources":["E:/ITI/React/az-animation/src/components/ReactRevelaMenu.jsx"],"names":["React","useEffect","useState","ReactRevelaMenu","setAnmyType","animationTypes","setAnimationTypes","menuLength","setTimeout","length","flexWrap","boxShadow","margin","map","item","i","animationType"],"mappings":"gJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAO,qBAAP,CACA,MAAO,uBAAP,C,gGAEA,QAASC,CAAAA,eAAT,MAAwC,IAAdC,CAAAA,WAAc,MAAdA,WAAc,CAEpC,cAA4CF,QAAQ,CAAC,EAAD,CAApD,wCAAOG,cAAP,eAAuBC,iBAAvB,eACA,GAAMC,CAAAA,UAAU,CAAG,CAAC,EAAD,CAAK,EAAL,CAAS,EAAT,CAAa,EAAb,CAAiB,EAAjB,CAAqB,EAArB,CAAyB,EAAzB,CAA6B,EAA7B,CAAiC,EAAjC,CAAqC,EAArC,CAAwC,EAAxC,CAA4C,EAA5C,CAAgD,EAAhD,CAAoD,EAApD,CAAwD,EAAxD,CAA4D,EAA5D,CAAgE,EAAhE,CAAnB,CAEAN,SAAS,CAAC,UAAM,CACdO,UAAU,CAAC,UAAM,CACfF,iBAAiB,CAAC,CAAC,MAAD,CAAS,MAAT,CAAiB,QAAjB,CAA2B,MAA3B,CAAmC,QAAnC,CAA6C,OAA7C,CAAsD,MAAtD,CAA8D,YAA9D,CAClB,MADkB,CACV,OADU,CACD,WADC,CACY,OADZ,CACqB,OADrB,CAC8B,YAD9B,CAC4C,OAD5C,CACqD,MADrD,CAC6D,OAD7D,CACsE,MADtE,CAC8E,QAD9E,CAAD,CAAjB,CAED,CAHS,CAGP,IAHO,CAAV,CAID,CALQ,CAKN,EALM,CAAT,CAOA,mBACE,yBAEGD,cAAc,CAACI,MAAf,GAA0B,CAA3B,cACA,sCACE,YAAK,SAAS,CAAC,8BAAf,CAA8C,KAAK,CAAE,CAACC,QAAQ,CAAE,MAAX,CAAmBC,SAAS,CAAE,gCAA9B,CAAgEC,MAAM,CAAE,aAAxE,CAArD,UAEIL,UAAU,CAACM,GAAX,CAAgB,SAACC,IAAD,CAAOC,CAAP,CAAa,CAAE,mBAC7B,aAAc,SAAS,CAAE,uBAAzB,UAAmDD,IAAnD,EAAWC,CAAX,CAD6B,CAE5B,CAFH,CAFJ,EADF,EADA,cAWA,sCACE,YAAK,SAAS,CAAE,iBAAhB,UACEV,cAAc,CAACQ,GAAf,CAAoB,SAACG,aAAD,CAAgBD,CAAhB,CAAsB,CAAC,mBACzC,YAAa,SAAS,iCAA2BC,aAA3B,CAAtB,CACA,OAAO,CAAE,yBAAMZ,CAAAA,WAAW,WAAIY,aAAJ,EAAjB,EADT,UAEEA,aAFF,EAAUD,CAAV,CADyC,CAIzC,CAJF,CADF,EADF,EAbF,EADF,CA0BH,CAGD,cAAeZ,CAAAA,eAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../styles/Menus.css';\r\nimport '../styles/General.css';\r\n\r\nfunction ReactRevelaMenu({setAnmyType}) {\r\n\r\n    const [animationTypes, setAnimationTypes] = useState([]);\r\n    const menuLength = ['', '', '', '', '', '', '', '', '', '','', '', '', '', '', '', '']; \r\n\r\n    useEffect(() => {\r\n      setTimeout(() => {\r\n        setAnimationTypes(['Fade', 'Flip', 'Rotate', 'Zoom', 'Bounce', 'Slide', 'Roll', 'LightSpeed',\r\n        'Jump', 'Flash', 'HeadShake', 'Jello', 'Pulse', 'RubberBand', 'Shake', 'Spin', 'Swing', 'Tada', 'Wobble']);\r\n      }, 2000);\r\n    }, []);\r\n\r\n    return (\r\n      <> \r\n      {\r\n        (animationTypes.length === 0) ?\r\n        <>\r\n          <div className=\"skeletonWrapper azDFlexCSevn\" style={{flexWrap: 'wrap', boxShadow: 'rgba(0, 0, 0, 0.1) 0px 3px 8px', margin: '0.3rem 0rem'}}>\r\n            {\r\n              menuLength.map( (item, i) => { return(\r\n                <span key={i} className={'skeletonWrapper__menu'}>{item}</span>\r\n              ) } )\r\n            }\r\n          </div>\r\n        </>\r\n        :\r\n        <>\r\n          <div className={'ReactRevelaMenu'}>{\r\n            animationTypes.map( (animationType, i) => {return(\r\n              <div key={i} className={`ReactRevelaMenu__item ${animationType}`}\r\n              onClick={() => setAnmyType(`${animationType}`)}\r\n              >{animationType}</div>\r\n            )})\r\n          }</div>\r\n        </>\r\n      }\r\n      </>\r\n    )\r\n}\r\n\r\n\r\nexport default ReactRevelaMenu;\r\n"]},"metadata":{},"sourceType":"module"}
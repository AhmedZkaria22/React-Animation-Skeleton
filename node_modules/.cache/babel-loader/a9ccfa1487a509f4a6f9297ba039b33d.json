{"ast":null,"code":"var _jsxFileName = \"E:\\\\ITI\\\\React\\\\az-animation\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport reactDom from 'react-dom';\nimport AnimationContainer from './components/AnimationContainer';\nimport AppNav from './components/AppNav';\nimport Hero from './components/Hero';\nimport ReactRevelaMenu from './components/ReactRevelaMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Elem() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ReactRevelaMenu, {\n      setAnmyType: setAnmyType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimationContainer, {\n      animationDirections: animationDirections,\n      animationType: anmyType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Elem;\n\nfunction App() {\n  _s();\n\n  const animationDirections = ['top', 'right', 'bottom', 'left'];\n  const [anmyType, setAnmyType] = useState('Roll');\n  const [rndElem, setRndElem] = useState( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ReactRevelaMenu, {\n      setAnmyType: setAnmyType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 44\n    }, this), /*#__PURE__*/_jsxDEV(AnimationContainer, {\n      animationDirections: animationDirections,\n      animationType: anmyType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true));\n  useMemo(() => {\n    // reactDom.render(rndElem, document.querySelector('.App'))    \n    if (document.querySelector('.App')) {\n      console.log(document.querySelector('.App'));\n    }\n  }, []); // useEffect(() => {\n  //   reactDom.render(rndElem, document.querySelector('.App'))    \n  // }, [rndElem]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'appNav',\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'appNav__item',\n        onClick: () => setRndElem( /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"Skeleton\"\n        }, void 0, false)),\n        children: \" Skeleton \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'appNav__item',\n        onClick: () => setRndElem( /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"Both\"\n        }, void 0, false)),\n        children: \" Both \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'appNav__item',\n        onClick: () => setRndElem( /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ReactRevelaMenu, {\n            setAnmyType: setAnmyType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(AnimationContainer, {\n            animationDirections: animationDirections,\n            animationType: anmyType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)),\n        children: \" React-Reveal \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bVyBEJpu40Urg7dFQVDgGgluqcA=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Elem\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["E:/ITI/React/az-animation/src/App.js"],"names":["React","useEffect","useMemo","useState","reactDom","AnimationContainer","AppNav","Hero","ReactRevelaMenu","Elem","setAnmyType","animationDirections","anmyType","App","rndElem","setRndElem","document","querySelector","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,QAApC,QAAoD,OAApD;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;;;;AAGA,SAASC,IAAT,GAAgB;AACd,sBACE;AAAA,4BACE,QAAC,eAAD;AAAiB,MAAA,WAAW,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,kBAAD;AAAoB,MAAA,mBAAmB,EAAEC,mBAAzC;AAA+D,MAAA,aAAa,EAAIC;AAAhF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KAPQH,I;;AAST,SAASI,GAAT,GAAe;AAAA;;AAEb,QAAMF,mBAAmB,GAAG,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,CAA5B;AACA,QAAM,CAACC,QAAD,EAAWF,WAAX,IAA0BP,QAAQ,CAAC,MAAD,CAAxC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,eAAC;AAAA,4BAAE,QAAC,eAAD;AAAiB,MAAA,WAAW,EAAEO;AAA9B;AAAA;AAAA;AAAA;AAAA,YAAF,eACrC,QAAC,kBAAD;AAAoB,MAAA,mBAAmB,EAAEC,mBAAzC;AAA+D,MAAA,aAAa,EAAIC;AAAhF;AAAA;AAAA;AAAA;AAAA,YADqC;AAAA,kBAAD,CAAtC;AAGAV,EAAAA,OAAO,CAAC,MAAM;AACZ;AACA,QAAIc,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAJ,EAAoC;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAZ;AAA8C;AACrF,GAHM,EAGJ,EAHI,CAAP,CAPa,CAYX;AACA;AACA;;AAEF,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAE,QAAhB;AAAA,8BACM;AAAM,QAAA,SAAS,EAAE,cAAjB;AAAiC,QAAA,OAAO,EAAE,MAAMF,UAAU,eAAE;AAAA;AAAA,yBAAF,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADN,eAEM;AAAM,QAAA,SAAS,EAAE,cAAjB;AAAiC,QAAA,OAAO,EAAE,MAAMA,UAAU,eAAE;AAAA;AAAA,yBAAF,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFN,eAGM;AAAM,QAAA,SAAS,EAAE,cAAjB;AAAiC,QAAA,OAAO,EAAE,MACtCA,UAAU,eAAE;AAAA,kCAAE,QAAC,eAAD;AAAiB,YAAA,WAAW,EAAEL;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAAF,eACR,QAAC,kBAAD;AAAoB,YAAA,mBAAmB,EAAEC,mBAAzC;AAA+D,YAAA,aAAa,EAAIC;AAAhF;AAAA;AAAA;AAAA;AAAA,kBADQ;AAAA,wBAAF,CADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHN;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAlCQC,G;;MAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport reactDom from 'react-dom';\nimport AnimationContainer from './components/AnimationContainer';\nimport AppNav from './components/AppNav';\nimport Hero from './components/Hero';\nimport ReactRevelaMenu from './components/ReactRevelaMenu';\n\n\nfunction Elem() {\n  return (\n    <div>\n      <ReactRevelaMenu setAnmyType={setAnmyType}/>\n      <AnimationContainer animationDirections={animationDirections}  animationType = {anmyType}/>\n    </div>\n  )\n}\n\nfunction App() {\n  \n  const animationDirections = ['top', 'right', 'bottom', 'left'];\n  const [anmyType, setAnmyType] = useState('Roll');\n  const [rndElem, setRndElem] = useState(<><ReactRevelaMenu setAnmyType={setAnmyType}/>\n    <AnimationContainer animationDirections={animationDirections}  animationType = {anmyType}/></>);\n\n  useMemo(() => {\n    // reactDom.render(rndElem, document.querySelector('.App'))    \n    if( document.querySelector('.App') ){ console.log(document.querySelector('.App')); }\n  }, []);\n\n    // useEffect(() => {\n    //   reactDom.render(rndElem, document.querySelector('.App'))    \n    // }, [rndElem]);\n\n  return (\n    <div className=\"App\">\n      <Hero />\n      {/* <AppNav /> */}\n      <div className={'appNav'}>\n            <span className={'appNav__item'} onClick={() => setRndElem( <>Skeleton</> )}> Skeleton </span>\n            <span className={'appNav__item'} onClick={() => setRndElem( <>Both</> )}> Both </span>\n            <span className={'appNav__item'} onClick={() => \n                setRndElem( <><ReactRevelaMenu setAnmyType={setAnmyType}/>\n                    <AnimationContainer animationDirections={animationDirections}  animationType = {anmyType}/></> )\n            }> React-Reveal </span>\n      </div>        \n      {/* <AppNav setRndElem={setRndElem} setAnmyType={setAnmyType} animationDirections={animationDirections}  animationType = {anmyType}/>\n      {reactDom.render(rndElem, document.getElementById('root'))} */}\n      {/* <ReactRevelaMenu setAnmyType={setAnmyType}/>\n      <AnimationContainer animationDirections={animationDirections}  animationType = {anmyType}/> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\ITI\\\\React\\\\az-animation\\\\src\\\\components\\\\DataItem.jsx\";\nimport React from 'react';\nimport '../styles/General.css';\nimport '../styles/DataItem.css';\nimport '../styles/SkeletonContainer.css';\nimport { Fade, Flip, Rotate, Zoom, Bounce, Slide, Roll, LightSpeed } from 'react-reveal';\nimport Jump from 'react-reveal/Jump';\nimport Flash from 'react-reveal/Flash';\nimport HeadShake from 'react-reveal/HeadShake';\nimport Jello from 'react-reveal/Jello';\nimport Pulse from 'react-reveal/Pulse';\nimport RubberBand from 'react-reveal/RubberBand';\nimport Shake from 'react-reveal/Shake';\nimport Spin from 'react-reveal/Spin';\nimport Swing from 'react-reveal/Swing';\nimport Tada from 'react-reveal/Tada';\nimport Wobble from 'react-reveal/Wobble';\nimport DataItemCard from './DataItemCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DataItem({\n  navType,\n  payload,\n  animationType,\n  bothListener\n}) {\n  /*const handelItem = () => {\r\n      if( (navType === 'Both' &&  bothListener === false)  || navType === 'Skeleton'){  return(\r\n      <div className={'skeletonWrapper'}>\r\n          <div style={{ display: 'flex', alignItems: 'center', backgroundColor: 'transparent' }}>\r\n              <span className={'skeletonWrapper__img'}></span>\r\n              <div style={{ width: '7rem' }}>\r\n                  <span className={'skeletonWrapper__text'} style={{ display: 'block' }}></span>\r\n                  <span className={'skeletonWrapper__text'} style={{ display: 'block' }}></span>\r\n              </div>\r\n          </div>\r\n          <span className={'skeletonWrapper__text'}></span>\r\n          <span className={'skeletonWrapper__text'}></span>\r\n          <span className={'skeletonWrapper__text'}></span>\r\n          <span className={'skeletonWrapper__text'}></span>\r\n          <span className={'skeletonWrapper__button'}></span>\r\n      </div>\r\n      )} else if( (navType === 'Both' && bothListener === true)  || navType === 'ReactReveal'){\r\n          if(animationType === 'Fade') {return(        <Fade right>    <DataItemCard payload={payload} />  </Fade> )\r\n          } else if(animationType === 'Flip') {return(       <Flip right>    <DataItemCard payload={payload} />  </Flip> )\r\n          } else if(animationType === 'Rotate') {return(     <Rotate  top left>   <DataItemCard payload={payload} />   </Rotate> )\r\n          } else if(animationType === 'Zoom') {return(       <Zoom  top>    <DataItemCard payload={payload} />  </Zoom> )\r\n          } else if(animationType === 'Bounce') {return(     <Bounce  top>    <DataItemCard payload={payload} /> </Bounce> )\r\n          } else if(animationType === 'Slide') {return(      <Slide  top>    <DataItemCard payload={payload} />  </Slide> )\r\n          } else if(animationType === 'Roll') {return(       <Roll  top>    <DataItemCard payload={payload} />   </Roll> )\r\n          } else if(animationType === 'LightSpeed') {return( <LightSpeed  left>    <DataItemCard payload={payload} />   </LightSpeed> )\r\n          } else if(animationType === 'Jump') {return(       <Jump>    <DataItemCard payload={payload} />    </Jump> )\r\n          } else if(animationType === 'Flash') {return(      <Flash>     <DataItemCard payload={payload} />  </Flash> )\r\n          } else if(animationType === 'HeadShake') {return(  <HeadShake>   <DataItemCard payload={payload} />   </HeadShake> )\r\n          } else if(animationType === 'Jello') {return(      <Jello>     <DataItemCard payload={payload} />  </Jello> )\r\n          } else if(animationType === 'Pulse') {return(      <Pulse>     <DataItemCard payload={payload} />  </Pulse> )\r\n          } else if(animationType === 'RubberBand') {return( <RubberBand  >     <DataItemCard payload={payload} />   </RubberBand> )\r\n          } else if(animationType === 'Shake') {return(      <Shake>     <DataItemCard payload={payload} />  </Shake> )\r\n          } else if(animationType === 'Spin') {return(       <Spin>    <DataItemCard payload={payload} />   </Spin> )\r\n          } else if(animationType === 'Swing') {return(      <Swing>     <DataItemCard payload={payload} /> </Swing> )\r\n          } else if(animationType === 'Tada') {return(       <Tada>    <DataItemCard payload={payload} />    </Tada> )\r\n          } else if(animationType === 'Wobble') {return(     <Wobble>     <DataItemCard payload={payload} />  </Wobble> )\r\n          } else{  return( <Jello>   <DataItemCard payload={payload} />  </Jello> )   }\r\n      }else{ return(null) }\r\n      }*/\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", navType === 'Both' && bothListener === false || navType === 'Skeleton' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'skeletonWrapper',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          backgroundColor: 'transparent',\n          marginBottom: '0.35rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: 'skeletonWrapper__img'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '7rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'skeletonWrapper__text',\n            style: {\n              display: 'block'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'skeletonWrapper__text',\n            style: {\n              display: 'block'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'skeletonWrapper__text'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'skeletonWrapper__text'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'skeletonWrapper__text'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'skeletonWrapper__text'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'skeletonWrapper__buttonSm'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : navType === 'Both' && bothListener === true || navType === 'ReactReveal' ? animationType === 'Fade' ? /*#__PURE__*/_jsxDEV(Fade, {\n      right: true,\n      children: [\"    \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 65\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 49\n    }, this) : animationType === 'Flip' ? /*#__PURE__*/_jsxDEV(Flip, {\n      right: true,\n      children: [\"    \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 65\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 49\n    }, this) : animationType === 'Rotate' ? /*#__PURE__*/_jsxDEV(Rotate, {\n      top: true,\n      left: true,\n      children: [\"   \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 70\n      }, this), \"   \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 49\n    }, this) : animationType === 'Zoom' ? /*#__PURE__*/_jsxDEV(Zoom, {\n      top: true,\n      children: [\"    \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 64\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 49\n    }, this) : animationType === 'Bounce' ? /*#__PURE__*/_jsxDEV(Bounce, {\n      top: true,\n      children: [\"    \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 66\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 49\n    }, this) : animationType === 'Slide' ? /*#__PURE__*/_jsxDEV(Slide, {\n      top: true,\n      children: [\"    \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 65\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 49\n    }, this) : animationType === 'Roll' ? /*#__PURE__*/_jsxDEV(Roll, {\n      top: true,\n      children: [\"    \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 64\n      }, this), \"   \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 49\n    }, this) : animationType === 'LightSpeed' ? /*#__PURE__*/_jsxDEV(LightSpeed, {\n      left: true,\n      children: [\"    \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 71\n      }, this), \"   \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 49\n    }, this) : animationType === 'Jump' ? /*#__PURE__*/_jsxDEV(Jump, {\n      children: [\"    \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 59\n      }, this), \"    \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 49\n    }, this) : animationType === 'Flash' ? /*#__PURE__*/_jsxDEV(Flash, {\n      children: [\"     \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 61\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 49\n    }, this) : animationType === 'HeadShake' ? /*#__PURE__*/_jsxDEV(HeadShake, {\n      children: [\"   \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 63\n      }, this), \"   \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 49\n    }, this) : animationType === 'Jello' ? /*#__PURE__*/_jsxDEV(Jello, {\n      children: [\"     \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 61\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 49\n    }, this) : animationType === 'Pulse' ? /*#__PURE__*/_jsxDEV(Pulse, {\n      children: [\"     \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 61\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 49\n    }, this) : animationType === 'RubberBand' ? /*#__PURE__*/_jsxDEV(RubberBand, {\n      children: [\"     \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 68\n      }, this), \"   \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 49\n    }, this) : animationType === 'Shake' ? /*#__PURE__*/_jsxDEV(Shake, {\n      children: [\"     \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 61\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 49\n    }, this) : animationType === 'Spin' ? /*#__PURE__*/_jsxDEV(Spin, {\n      children: [\"    \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 59\n      }, this), \"   \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 49\n    }, this) : animationType === 'Swing' ? /*#__PURE__*/_jsxDEV(Swing, {\n      children: [\"     \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 61\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 49\n    }, this) : animationType === 'Tada' ? /*#__PURE__*/_jsxDEV(Tada, {\n      children: [\"    \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 59\n      }, this), \"    \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 49\n    }, this) : animationType === 'Wobble' ? /*#__PURE__*/_jsxDEV(Wobble, {\n      children: [\"     \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 62\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 49\n    }, this) : /*#__PURE__*/_jsxDEV(Jello, {\n      children: [\"   \", /*#__PURE__*/_jsxDEV(DataItemCard, {\n        payload: payload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }, this) : null]\n  }, void 0, true);\n}\n\n_c = DataItem;\nexport default DataItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataItem\");","map":{"version":3,"sources":["E:/ITI/React/az-animation/src/components/DataItem.jsx"],"names":["React","Fade","Flip","Rotate","Zoom","Bounce","Slide","Roll","LightSpeed","Jump","Flash","HeadShake","Jello","Pulse","RubberBand","Shake","Spin","Swing","Tada","Wobble","DataItemCard","DataItem","navType","payload","animationType","bothListener","display","alignItems","backgroundColor","marginBottom","width"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../styles/General.css';\r\nimport '../styles/DataItem.css';\r\nimport '../styles/SkeletonContainer.css';\r\nimport {Fade, Flip, Rotate, Zoom, Bounce, Slide, Roll, LightSpeed} from 'react-reveal';\r\nimport Jump from 'react-reveal/Jump';\r\nimport Flash from 'react-reveal/Flash';\r\nimport HeadShake from 'react-reveal/HeadShake';\r\nimport Jello from 'react-reveal/Jello';\r\nimport Pulse from 'react-reveal/Pulse';\r\nimport RubberBand from 'react-reveal/RubberBand';\r\nimport Shake from 'react-reveal/Shake';\r\nimport Spin from 'react-reveal/Spin';\r\nimport Swing from 'react-reveal/Swing';\r\nimport Tada from 'react-reveal/Tada';\r\nimport Wobble from 'react-reveal/Wobble';\r\nimport DataItemCard from './DataItemCard';\r\n\r\nfunction DataItem({navType, payload, animationType, bothListener}) {\r\n\r\n    /*const handelItem = () => {\r\n        if( (navType === 'Both' &&  bothListener === false)  || navType === 'Skeleton'){  return(\r\n        <div className={'skeletonWrapper'}>\r\n            <div style={{ display: 'flex', alignItems: 'center', backgroundColor: 'transparent' }}>\r\n                <span className={'skeletonWrapper__img'}></span>\r\n                <div style={{ width: '7rem' }}>\r\n                    <span className={'skeletonWrapper__text'} style={{ display: 'block' }}></span>\r\n                    <span className={'skeletonWrapper__text'} style={{ display: 'block' }}></span>\r\n                </div>\r\n            </div>\r\n            <span className={'skeletonWrapper__text'}></span>\r\n            <span className={'skeletonWrapper__text'}></span>\r\n            <span className={'skeletonWrapper__text'}></span>\r\n            <span className={'skeletonWrapper__text'}></span>\r\n            <span className={'skeletonWrapper__button'}></span>\r\n        </div>\r\n        )} else if( (navType === 'Both' && bothListener === true)  || navType === 'ReactReveal'){\r\n            if(animationType === 'Fade') {return(        <Fade right>    <DataItemCard payload={payload} />  </Fade> )\r\n            } else if(animationType === 'Flip') {return(       <Flip right>    <DataItemCard payload={payload} />  </Flip> )\r\n            } else if(animationType === 'Rotate') {return(     <Rotate  top left>   <DataItemCard payload={payload} />   </Rotate> )\r\n            } else if(animationType === 'Zoom') {return(       <Zoom  top>    <DataItemCard payload={payload} />  </Zoom> )\r\n            } else if(animationType === 'Bounce') {return(     <Bounce  top>    <DataItemCard payload={payload} /> </Bounce> )\r\n            } else if(animationType === 'Slide') {return(      <Slide  top>    <DataItemCard payload={payload} />  </Slide> )\r\n            } else if(animationType === 'Roll') {return(       <Roll  top>    <DataItemCard payload={payload} />   </Roll> )\r\n            } else if(animationType === 'LightSpeed') {return( <LightSpeed  left>    <DataItemCard payload={payload} />   </LightSpeed> )\r\n            } else if(animationType === 'Jump') {return(       <Jump>    <DataItemCard payload={payload} />    </Jump> )\r\n            } else if(animationType === 'Flash') {return(      <Flash>     <DataItemCard payload={payload} />  </Flash> )\r\n            } else if(animationType === 'HeadShake') {return(  <HeadShake>   <DataItemCard payload={payload} />   </HeadShake> )\r\n            } else if(animationType === 'Jello') {return(      <Jello>     <DataItemCard payload={payload} />  </Jello> )\r\n            } else if(animationType === 'Pulse') {return(      <Pulse>     <DataItemCard payload={payload} />  </Pulse> )\r\n            } else if(animationType === 'RubberBand') {return( <RubberBand  >     <DataItemCard payload={payload} />   </RubberBand> )\r\n            } else if(animationType === 'Shake') {return(      <Shake>     <DataItemCard payload={payload} />  </Shake> )\r\n            } else if(animationType === 'Spin') {return(       <Spin>    <DataItemCard payload={payload} />   </Spin> )\r\n            } else if(animationType === 'Swing') {return(      <Swing>     <DataItemCard payload={payload} /> </Swing> )\r\n            } else if(animationType === 'Tada') {return(       <Tada>    <DataItemCard payload={payload} />    </Tada> )\r\n            } else if(animationType === 'Wobble') {return(     <Wobble>     <DataItemCard payload={payload} />  </Wobble> )\r\n            } else{  return( <Jello>   <DataItemCard payload={payload} />  </Jello> )   }\r\n        }else{ return(null) }\r\n\r\n\r\n    }*/\r\n\r\n    return (\r\n    <> {\r\n        ( (navType === 'Both' &&  bothListener === false)  || navType === 'Skeleton') ?\r\n        <div className={'skeletonWrapper'}>\r\n            <div style={{ display: 'flex', alignItems: 'center', backgroundColor: 'transparent', marginBottom: '0.35rem' }}>\r\n                <span className={'skeletonWrapper__img'}></span>\r\n                <div style={{ width: '7rem' }}>\r\n                    <span className={'skeletonWrapper__text'} style={{ display: 'block' }}></span>\r\n                    <span className={'skeletonWrapper__text'} style={{ display: 'block' }}></span>\r\n                </div>\r\n            </div>\r\n            <span className={'skeletonWrapper__text'}></span>\r\n            <span className={'skeletonWrapper__text'}></span>\r\n            <span className={'skeletonWrapper__text'}></span>\r\n            <span className={'skeletonWrapper__text'}></span>\r\n            <span className={'skeletonWrapper__buttonSm'}></span>\r\n        </div>\r\n\r\n        : ( (navType === 'Both' && bothListener === true)  || navType === 'ReactReveal') ?\r\n            (animationType === 'Fade') ?        <Fade right>    <DataItemCard payload={payload} />  </Fade>\r\n            :(animationType === 'Flip') ?       <Flip right>    <DataItemCard payload={payload} />  </Flip>\r\n            :(animationType === 'Rotate') ?     <Rotate  top left>   <DataItemCard payload={payload} />   </Rotate>\r\n            :(animationType === 'Zoom') ?       <Zoom  top>    <DataItemCard payload={payload} />  </Zoom>\r\n            :(animationType === 'Bounce') ?     <Bounce  top>    <DataItemCard payload={payload} /> </Bounce>\r\n            :(animationType === 'Slide') ?      <Slide  top>    <DataItemCard payload={payload} />  </Slide>\r\n            :(animationType === 'Roll') ?       <Roll  top>    <DataItemCard payload={payload} />   </Roll>\r\n            :(animationType === 'LightSpeed') ? <LightSpeed  left>    <DataItemCard payload={payload} />   </LightSpeed>\r\n            :(animationType === 'Jump') ?       <Jump>    <DataItemCard payload={payload} />    </Jump>\r\n            :(animationType === 'Flash') ?      <Flash>     <DataItemCard payload={payload} />  </Flash>\r\n            :(animationType === 'HeadShake') ?  <HeadShake>   <DataItemCard payload={payload} />   </HeadShake>\r\n            :(animationType === 'Jello') ?      <Jello>     <DataItemCard payload={payload} />  </Jello>\r\n            :(animationType === 'Pulse') ?      <Pulse>     <DataItemCard payload={payload} />  </Pulse>\r\n            :(animationType === 'RubberBand') ? <RubberBand  >     <DataItemCard payload={payload} />   </RubberBand>\r\n            :(animationType === 'Shake') ?      <Shake>     <DataItemCard payload={payload} />  </Shake>\r\n            :(animationType === 'Spin') ?       <Spin>    <DataItemCard payload={payload} />   </Spin>\r\n            :(animationType === 'Swing') ?      <Swing>     <DataItemCard payload={payload} /> </Swing>\r\n            :(animationType === 'Tada') ?       <Tada>    <DataItemCard payload={payload} />    </Tada>\r\n            :(animationType === 'Wobble') ?     <Wobble>     <DataItemCard payload={payload} />  </Wobble>\r\n            : <Jello>   <DataItemCard payload={payload} />  </Jello>\r\n        \r\n        :null\r\n    }</>\r\n    )\r\n}\r\n\r\nexport default DataItem\r\n"]},"metadata":{},"sourceType":"module"}